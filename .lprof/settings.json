{
  "path": "/Users/dklein/GIT/hpvsim/tests/devtests/test_popgrowth.py",
  "unit_test": false,
  "functions": [],
  "script": "'''\nDebug Kenya population growth\n'''\n\nimport sciris as sc\nimport numpy as np\nimport pylab as pl\nimport hpvsim as hpv\nsc.options(dpi=150, font='monospace')\n\n\nloc = 'nigeria'\ndf = hpv.data.get_total_pop(loc)\n\n\n# for label,mig in {'No migration':False, 'With migration':True}.items():\nfor label, mig in {'With migration': True}.items():\n    pars = dict(\n        n_agents = round(df.pop_size[0]/1e3),\n        start = df.year[0],\n        end = 2030,\n        location = loc,\n        pop_scale = 1e3,\n        # genotypes = [],\n        beta = 0.1,\n        dt = 0.5,\n        use_migration = mig,\n        use_multiscale = True,\n        ms_agent_ratio = 100,\n    )\n\n    sim = hpv.Sim(pars, label=label)\n    sim.run()\n    factor=1e6\n    years = sim.results['year']  # + 1 since update happens before analyzer\n    pop = sim.results['n_alive'].values / factor\n    pop0 = pop[0]\n    pop1 = pop[-1]\n    y0 = years[0]\n    y1 = years[-1]\n    df = df[np.multiply(df.year.values >= y0, df.year.values <= y1)].reset_index()\n    df.pop_size /= factor\n    ind0 = sc.findnearest(df.year, y0)\n    ind1 = sc.findnearest(df.year, y1)\n    dy0 = df.year[ind0]\n    dy1 = df.year[ind1]\n    data0 = df.pop_size[ind0]\n    data1 = df.pop_size[ind1]\n    ratio = pop1 / data1\n    out = sc.objdict(years=years, pop=pop, pop0=pop0, pop1=pop1, y0=y0, y1=y1, data0=data0, data1=data1,\n                          ratio=ratio)\n\n    pl.figure()\n    pl.scatter(df.year, df.pop_size, c='k', label='Data', alpha=0.4)\n    pl.plot(years, pop, label='Model', lw=2, alpha=1.0)\n    pl.xlabel('Year')\n    pl.ylabel('Population size')\n    pl.title(f'''\n        {sim.label}\n        Model: {y0:0.1f} = {pop0:0.2f}m; {y1:0.1f} = {pop1:0.2f}m\n        Data:  {dy0:0.1f} = {data0:0.2f}m; {dy1:0.1f} = {data1:0.2f}m\n        Ratio: {ratio:0.3f}''')\n    pl.legend()\n    sc.figlayout()\n    pl.show()\n"
}